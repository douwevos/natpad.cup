package net.natpad.cup.export.java.ast;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

public class AstJava {

	
	private AstClassName astClassName;
	private AstClassName extendsClassName;
	private Set<AstClassName> importSet = new HashSet<AstClassName>(); 
	
	private PrintWriter writer;
	
	
	public void setClassName(AstClassName astClassName) {
		this.astClassName = astClassName;
	}

	public void setExtends(AstClassName extendsClassName) {
		this.extendsClassName = extendsClassName;
	}
	
	public boolean addImport(AstClassName astClassName) {
		return importSet.add(astClassName);
	}

	
	
	public PrintWriter openClass(File baseDir) throws IOException {
		
		File outDir = baseDir;
		if (astClassName.astPackage!=null) {
			for(String subname : astClassName.astPackage) {
				outDir = new File(outDir, subname);
			}
		}
		outDir.mkdirs();
		PrintWriter out = new PrintWriter(new File(outDir, astClassName.className+".java"));
		writer = out;
		out.println("/* generated by natpad.cup "+new Date()+" */");
		out.println("package "+astClassName.astPackage.fqname+";");
		out.println();
		ArrayList<String> arrayList = new ArrayList<String>();
		HashSet<AstClassName> imports = new HashSet<AstClassName>(importSet);
		if (extendsClassName!=null) {
			imports.add(extendsClassName);
		}
		for(AstClassName importName : imports) {
			if (importName.astPackage.equals(astClassName.astPackage)) {
				continue;
			}
			String fqname = importName.getFullQualifiedName();
			arrayList.add(fqname);
		}
		
		Collections.sort(arrayList);
		for(String importName : arrayList) {
			if (importName.startsWith("java.lang.")) {
				continue;
//			} else if (importName.startsWith("java.util.")) {
//				continue;
			}
			
			out.println("import "+importName+";");
		}
		if (!importSet.isEmpty()) {
			out.println();
		}
		
		out.print("public class "+astClassName.className);
		if (extendsClassName!=null) {
			out.print(" extends "+extendsClassName.className);
		}
		out.println(" {");
		return out;
	}

	public void closeClass(PrintWriter out) {
		out.println("}");
		out.flush();
		out.close();
	}

	
	protected int indent;
	protected boolean atStart = true;
	
	public void increaseIndent() {
		indent++;
	}

	public void decreaseIndent() {
		indent++;
	}

	
	public void println(String txt) {
		print(txt+"\n");
	}

	public void print(String text) {
		String prefix = "";
		for(int k=indent; k>0; k--) {
			prefix = prefix+"\t";
		}
		int idxa = 0;
		boolean keepRunning = true;
		while(keepRunning) {
			int idxb = text.indexOf('\n', idxa);
			int idxc = text.indexOf('\r', idxa);
			if ((idxb==-1) || (idxc<idxb && idxc!=-1)) {
				idxb = idxc;
			}
			
			if (idxb<0) {
				keepRunning = false;
				idxb=text.length();
			}
			String sub = text.substring(idxa, idxb);
			if (!sub.trim().isEmpty()) {
				if (atStart) {
					writer.write(prefix);
				}
				writer.write(sub.trim());
			}
			
			if (keepRunning) {
				idxa = idxb+1;
				writer.write('\n');
			}
		}
	}

	
}
